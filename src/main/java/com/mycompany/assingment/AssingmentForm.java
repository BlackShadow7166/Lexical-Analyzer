/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.assingment;


import java.io.File;
import javax.swing.JFileChooser;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author usama
 */
public class AssingmentForm extends javax.swing.JFrame {

    /**
     * Creates new form AssingmentForm
     */
    public AssingmentForm() {
        initComponents();
    }
    
    String templateContent;
    String contentWithOutComments;
    private static final Set<String> KEYWORDS = new HashSet<>(Arrays.asList(
        "abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", 
        "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", 
        "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", 
        "int", "interface", "long", "native", "new", "null", "package", "private", 
        "protected", "public", "return", "short", "static", "strictfp", "super", 
        "switch", "synchronized", "this", "throw", "throws", "transient", "try", "void", 
        "volatile", "while" , "for" , "String" , "String[] args","main"
    ));
    class SymbolInfo {
    String type;
    String value;
    

    public SymbolInfo(String type, String value) {
        this.type = type;
        this.value = value;
        
    }

    @Override
    public String toString() {
        return "Type: " + type + ", Value: " + value ;
    }
}

private Map<String, SymbolInfo> symbolTable = new HashMap<>();
private void storeInSymbolTable(String token, String type) {
    if (!symbolTable.containsKey(token)) {
        symbolTable.put(token, new SymbolInfo(type, token));
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        FilePathField = new javax.swing.JTextField();
        removeWhiteSpacesButton = new javax.swing.JButton();
        removeCommentsButton = new javax.swing.JButton();
        recConstantsButton = new javax.swing.JButton();
        recKeywordsButton = new javax.swing.JButton();
        recIdentifiersButton = new javax.swing.JButton();
        recOperators = new javax.swing.JButton();
        lexemeTokenButton = new javax.swing.JButton();
        symbolTblButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Select File");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        removeWhiteSpacesButton.setText("Remove White Space");
        removeWhiteSpacesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeWhiteSpacesButtonMouseClicked(evt);
            }
        });

        removeCommentsButton.setText("Remove Comments");
        removeCommentsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeCommentsButtonMouseClicked(evt);
            }
        });

        recConstantsButton.setText("Recognize Constants");
        recConstantsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recConstantsButtonMouseClicked(evt);
            }
        });

        recKeywordsButton.setText("Recognize Keywords");
        recKeywordsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recKeywordsButtonMouseClicked(evt);
            }
        });

        recIdentifiersButton.setText("Recognize Identifiers");
        recIdentifiersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recIdentifiersButtonMouseClicked(evt);
            }
        });

        recOperators.setText("Recognize Operators");
        recOperators.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recOperatorsMouseClicked(evt);
            }
        });

        lexemeTokenButton.setText("Lexeme Token Pairs");
        lexemeTokenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lexemeTokenButtonMouseClicked(evt);
            }
        });

        symbolTblButton.setText("Symbol Tabel");
        symbolTblButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                symbolTblButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeWhiteSpacesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(removeCommentsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recConstantsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recKeywordsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recIdentifiersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recOperators, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lexemeTokenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(symbolTblButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(FilePathField))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(FilePathField))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(removeCommentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeWhiteSpacesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(recConstantsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(recKeywordsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(recIdentifiersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(recOperators, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lexemeTokenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(symbolTblButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        File file = fileChooser.getSelectedFile();
        String filePath = file.getAbsolutePath();
        System.out.print(filePath);
        FilePathField.setText(filePath);
        try{
            String templateFilePath = FilePathField.getText();
            templateContent = new String(Files.readAllBytes(Paths.get(templateFilePath)));
            jTextArea.setText(templateContent);
            
            // for using the content without comments 
            contentWithOutComments = templateContent.replaceAll("(?s)/\\*.*?\\*/|//.*?(?=\\n)", "");

            
        }catch(Exception e){
            System.out.print(e);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void removeWhiteSpacesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeWhiteSpacesButtonMouseClicked
        // TODO add your handling code here:
        String contentWithOutSpace = contentWithOutComments.replaceAll("\\s+"," ");
        jTextArea.setText(contentWithOutSpace);

        
    }//GEN-LAST:event_removeWhiteSpacesButtonMouseClicked

    private void removeCommentsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeCommentsButtonMouseClicked
        // TODO add your handling code here:
        //contentWithOutComments = templateContent.replaceAll("(?s)/\\*.*?\\*/|//.*?(?=\\n)", "");
        jTextArea.setText(contentWithOutComments);
    }//GEN-LAST:event_removeCommentsButtonMouseClicked

    private void recConstantsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recConstantsButtonMouseClicked
        // TODO add your handling code here:
        List<String> constants = new ArrayList<>();
       
        String constantPattern = "\\b\\d+(\\.\\d+)?(f|F|d|D|l|L)?\\b";
        Matcher constantMatcher = Pattern.compile(constantPattern).matcher(contentWithOutComments);
        while (constantMatcher.find()){
           constants.add(constantMatcher.group());
        }
        StringBuilder textContent = new StringBuilder();
        for (String constant : constants) {
            textContent.append(constant).append("\n");
        }
        jTextArea.setText(textContent.toString());
    }//GEN-LAST:event_recConstantsButtonMouseClicked

    private void recKeywordsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recKeywordsButtonMouseClicked
        // TODO add your handling code here:
        String IDENTIFIER_REGEX = "\\b[A-Za-z_][A-Za-z0-9_]*\\b";
        Matcher identifierMatcher = Pattern.compile(IDENTIFIER_REGEX).matcher(contentWithOutComments);
        jTextArea.setText("");
        while(identifierMatcher.find()){
            String match = identifierMatcher.group();
            if(KEYWORDS.contains(match)){
                jTextArea.append(match + System.lineSeparator() );
            }
            else{
                
            }
        }
    }//GEN-LAST:event_recKeywordsButtonMouseClicked

    private void recIdentifiersButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recIdentifiersButtonMouseClicked
        // TODO add your handling code here:
         String IDENTIFIER_REGEX = "\\b[A-Za-z_][A-Za-z0-9_]*\\b";
        Matcher identifierMatcher = Pattern.compile(IDENTIFIER_REGEX).matcher(contentWithOutComments);
        jTextArea.setText("");
        while(identifierMatcher.find()){
            String match = identifierMatcher.group();
            if(!KEYWORDS.contains(match)){
                storeInSymbolTable(match, "Identifier");
                jTextArea.append(match + System.lineSeparator());
        }
        }
    }//GEN-LAST:event_recIdentifiersButtonMouseClicked

    private void recOperatorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recOperatorsMouseClicked
        // TODO add your handling code here:
        String OPERATORS_REGEX = "[+\\-*/=<>!]+";
        Matcher operatorMatcher = Pattern.compile(OPERATORS_REGEX).matcher(contentWithOutComments);
        StringBuilder operators = new StringBuilder();
 
        while (operatorMatcher.find()) {
            String operator = operatorMatcher.group();
            storeInSymbolTable(operator, "Operator");
           
            operators.append(operatorMatcher.group()).append("\n");
        }
        jTextArea.setText(operators.toString());
    }//GEN-LAST:event_recOperatorsMouseClicked

    private void lexemeTokenButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lexemeTokenButtonMouseClicked
        // TODO add your handling code here:
        StringBuilder lexemeTokenPairs = new StringBuilder();
        for (Map.Entry<String, SymbolInfo> entry : symbolTable.entrySet()) {
            lexemeTokenPairs.append("Lexeme: ").append(entry.getKey())
                        .append(" ,   Token: ").append(entry.getValue().type)                  
                        .append("\n");
        }
        jTextArea.setText(lexemeTokenPairs.toString());
    }//GEN-LAST:event_lexemeTokenButtonMouseClicked

    private void symbolTblButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_symbolTblButtonMouseClicked
        // TODO add your handling code here:
         StringBuilder symbolTableContent = new StringBuilder();
         for (Map.Entry<String, SymbolInfo> entry : symbolTable.entrySet()) {
            symbolTableContent.append(entry.getKey()).append(" -> ").append(entry.getValue().toString()).append("\n");
        }
         jTextArea.setText(symbolTableContent.toString());
    }//GEN-LAST:event_symbolTblButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssingmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssingmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssingmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssingmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssingmentForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FilePathField;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JButton lexemeTokenButton;
    private javax.swing.JButton recConstantsButton;
    private javax.swing.JButton recIdentifiersButton;
    private javax.swing.JButton recKeywordsButton;
    private javax.swing.JButton recOperators;
    private javax.swing.JButton removeCommentsButton;
    private javax.swing.JButton removeWhiteSpacesButton;
    private javax.swing.JButton symbolTblButton;
    // End of variables declaration//GEN-END:variables
}
